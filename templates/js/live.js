// Generated by CoffeeScript 1.7.1
var create_header, format_game_time, game_id, graphs, load_completed, load_graphs, load_header, load_live_content, refresh_data, refresh_graphs, refresh_header, update_header, zeroes;

Array.prototype.last = function() {
  return this[this.length - 1];
};

graphs = ["supply_current", "minerals_income", "minerals_gathered"];

game_id = -1;

zeroes = function(val, n) {
  var s;
  if (n == null) {
    n = 2;
  }
  s = "" + val;
  while (s.length < n) {
    s = "0" + s;
  }
  return s;
};

format_game_time = function(time) {
  var out;
  out = "";
  if (time > 3600) {
    out += "" + (Math.floor(time / 3600)) + ":";
    time = time % 3600;
  }
  return out + ("" + (zeroes(Math.floor(time / 60))) + ":" + (zeroes(time % 60)));
};

load_live_content = function() {
  game_id = $("#live_content").attr("data-game-id");
  return $.getJSON("/live/get/livestats/?id=" + game_id, load_completed);
};

load_completed = function(data) {
  $("#live_content").empty();
  load_header(data);
  load_graphs(data);
  return setInterval(refresh_data, 1000);
};

load_graphs = function(data) {
  var graph_id, player_1_data, player_2_data, x, _i, _len, _results;
  _results = [];
  for (_i = 0, _len = graphs.length; _i < _len; _i++) {
    graph_id = graphs[_i];
    $("#live_content").append("<div id='live_" + graph_id + "' class='live-chart'></div>");
    player_1_data = (function() {
      var _j, _len1, _results1;
      _results1 = [];
      for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
        x = data[_j];
        _results1.push([x[0]["game_time"], x[0][graph_id]]);
      }
      return _results1;
    })();
    player_2_data = (function() {
      var _j, _len1, _results1;
      _results1 = [];
      for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
        x = data[_j];
        _results1.push([x[0]["game_time"], x[1][graph_id]]);
      }
      return _results1;
    })();
    _results.push($("#live_" + graph_id).highcharts({
      title: {
        text: graph_id,
        x: -20
      },
      chart: {
        animation: false
      },
      tooltip: {
        enabled: false
      },
      plotOptions: {
        series: {
          marker: {
            enabled: false
          }
        }
      },
      series: [
        {
          name: "Player 1",
          data: player_1_data
        }, {
          name: "Player 2",
          data: player_2_data
        }
      ]
    }));
  }
  return _results;
};

load_header = function(data) {
  create_header();
  if (data[0] != null) {
    return update_header(data.last());
  }
};

refresh_data = function() {
  return $.getJSON("/live/get/livestats/?id=" + game_id + "&latest=1", function(data) {
    refresh_graphs(data);
    return refresh_header(data);
  });
};

refresh_graphs = function(data) {
  var graph_id, series, _i, _len, _results;
  _results = [];
  for (_i = 0, _len = graphs.length; _i < _len; _i++) {
    graph_id = graphs[_i];
    series = $("#live_" + graph_id).highcharts().series;
    if (data[0][0] != null) {
      series[0].addPoint([data[0][0]["game_time"], data[0][0][graph_id]]);
    }
    if (data[0][1] != null) {
      _results.push(series[1].addPoint([data[0][1]["game_time"], data[0][1][graph_id]]));
    } else {
      _results.push(void 0);
    }
  }
  return _results;
};

refresh_header = function(data) {
  if (data[0] != null) {
    return update_header(data[0]);
  }
};

create_header = function() {
  return $("#live_content").append("<div id='live_header'></div>");
};

update_header = function(data) {
  var pl1_supply, pl2_supply, timer;
  pl1_supply = "" + data[0].supply_current + "/" + data[0].supply_cap;
  pl2_supply = "" + data[1].supply_current + "/" + data[1].supply_cap;
  timer = format_game_time(data[0].game_time);
  return $("#live_header").html("<h2>" + pl1_supply + " -- " + timer + " -- " + pl2_supply + "</h2>");
};

$(document).ready(load_live_content);
